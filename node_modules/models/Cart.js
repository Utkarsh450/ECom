const mongoose = require('mongoose');
const Joi = require('joi');

// Cart Schema for Mongoose with validation constraints
const CartSchema = mongoose.Schema({
    user: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'user',
        required: true,
        unique: true,
    },
    products: [
        {
            type: mongoose.Schema.Types.ObjectId,
            ref: 'Product',
            required: true,
        }
    ],
    totalPrice: {
        type: Number,
        required: true,
        min: 0, // Ensures totalPrice cannot be negative
    },
}, { timestamps: true });

// Joi Validation Schema for Cart Data
const validateCart = (data) => {
    const schema = Joi.object({
        user: Joi.string().required(), // Expecting a valid ObjectId as a string
        products: Joi.array().items(Joi.string().required()).min(1).required(), // Array of ObjectId strings
        totalPrice: Joi.number().min(0).required(), // Positive number for totalPrice
    });

    return schema.validate(data);
};

// Export both Mongoose Model and Joi Validation function
const Cart = mongoose.model('Cart', CartSchema);

module.exports = {
    Cart,
    validateCart,
};
