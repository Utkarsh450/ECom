const mongoose = require('mongoose');
const Joi = require('joi');

// Mera Schema for Mongoose with validation constraints
const MeraSchema = mongoose.Schema({
    orderId:{
        type:String,
        required: true,
        },
    user: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'user',
        required: true,
        unique: true, // Ensure each user has only one Mera entry
    },
    products: [
        {
            type: mongoose.Schema.Types.ObjectId,
            ref: 'product',
            required: true,
        }
    ],
    totalPrice: {
        type: Number,
        required: true,
        min: 0, // Ensures totalPrice is non-negative
    },
    address: {
        type: String,
        required: true,
        minlength: 5,
        maxlength: 100, // Set limits for the address
    },
    status: {
        type: String,
        required: true,
        enum: ['pending', 'shipped', 'delivered', 'cancelled'], // Restrict status to specific values
    },
    payment: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'payment',
        required: true,
    },
    delivery: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'delivery',
        required: true,
    },
}, { timestamps: true });

// Joi Validation Schema for Mera Data
const validateMera = (data) => {
    const schema = Joi.object({
        user: Joi.string().required(), // Expecting a valid ObjectId as a string
        products: Joi.array().items(Joi.string().required()).min(1).required(), // Array of ObjectId strings
        totalPrice: Joi.number().min(0).required(), // Total price must be non-negative
        address: Joi.string().min(5).max(100).required(),
        status: Joi.string().valid('pending', 'shipped', 'delivered', 'cancelled').required(),
        payment: Joi.string().required(), // Valid ObjectId for payment
        delivery: Joi.string().required(), // Valid ObjectId for delivery
    });

    return schema.validate(data);
};

// Export both Mongoose Model and Joi Validation function
const Mera = mongoose.model('Mera', MeraSchema);

module.exports = {
    Mera,
    validateMera,
};
